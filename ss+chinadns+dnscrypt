#!/bin/sh

# self="$(curl -sS https://raw.githubusercontent.com/zw963/deployment_bash/v0.3.3/deploy_start.sh)" && eval "$self"

self="$(cat ~/Project/deployment_bash/deploy_start.sh)" && eval "$self"

export target=$1

if [ ! -e ./route/opt/etc/shadowsocks.json ];then
    echo '请首先定义 route/opt/etc/shadowsocks.json'
    exit
fi

copy route/opt/etc/dnscrypt-proxy.sh /opt/etc
copy route/opt/etc/dnsmasq.d/foreign_domains.conf /opt/etc/dnsmasq.d/foreign_domains.conf
copy route/opt/etc/iptables.sh /opt/etc
copy route/opt/etc/iptables_disable.sh /opt/etc
copy route/opt/etc/patch_dnsmasq /opt/etc
copy route/opt/etc/restart_dnsmasq /opt/etc
copy route/opt/etc/shadowsocks.json /opt/etc
copy route/opt/etc/localips /opt/etc
copy route/opt/etc/update_ip_whitelist /opt/etc
copy route/opt/etc/chinadns_chnroute.txt /opt/etc

deploy_start

# ----------------------------------------------------
#
# 下面的脚本会在远程路由器之上执行, 请根据所需，酌情修改。
#
# ---------------------------------------------------

# 如果第一次运行本脚本, 请务必初始化 entware 包管理系统.
# ssh 登陆路由器, 执行 entware-setup.sh, 选择 1'

if ! opkg --version; then
    echo "Run \`entware-setup.sh' to initalize entware-ng!"
    exit
fi

# 如果不存在 ipset (例如 AC66U), 首先安装 ipset4
which ipset &>/dev/null || opkg install ipset4

# 添加 AC87U 的 ipset protocal version 6 的 iptables/ipset 支持.
ipset_protocal_version=$(ipset -v |grep -o 'version.*[0-9]' |head -n1 |cut -d' ' -f2)

set -e

opkg install libc libssp libev libmbedtls libpcre libpthread libsodium haveged zlib libopenssl

if opkg find shadowsocks-libev |grep -qs -e '.*'; then
    opkg install shadowsocks-libev
elif opkg find shadowsocks-libev-ss-redir |grep -qs -e '.*'; then
    opkg install shadowsocks-libev-ss-redir
fi

opkg install chinadns
opkg install dnscrypt-proxy
# opkg install bind-dig

if [ "$ipset_protocal_version" == 6 ]; then
    # AC87U 无需安装新版的 iptables/ipset
    echo 'skip install iptables'
else
    # AC66U, 需要额外安装新版的 iptables
    opkg install iptables
fi

# ----------------------------------------------------
#
# 下面执行一些脚本检查与替换。
#
# ---------------------------------------------------

# 确保 shadowsocks.json 中的 local_address 替换为路由器 ip 地址。
replace_regex '"local_address".*' '"local_address":'"\"$targetip\"," /opt/etc/shadowsocks.json

# 将 chinadns 作为 dnsmasq 的上游 DNS 服务器
replace_string UPSTREAM_PORT 5356 /opt/etc/dnsmasq.d/foreign_domains.conf

# 修改 chinadns 的端口为 5356, 并将 dnscrypt-proxy (端口 65053) 作为 dnsmasq 的上游 DNS 服务器,
# 注意, 这个功能需要自己有 dnscrpyt-server.
replace_string 5353 '5356 -b 127.0.0.1 -s 114.114.114.114,127.0.0.1:65053' /opt/etc/init.d/S56chinadns
#
# 默认 shadowsocks 启动脚本使用 ss-redir 而不是 ss-local, 端口 1080.
replace_string ss-local ss-redir /opt/etc/init.d/S22shadowsocks

# ----------------------------------------------------
#
# 启动所需的脚本
#
# ---------------------------------------------------

# 在分区加载之后, 运行 /opt/etc/patch_dnsmasq, 为 dnsmasq 追加配置, 并重启 dnsmasq 服务.
chmod +x /opt/etc/patch_dnsmasq && add_service post-mount '/opt/etc/patch_dnsmasq'
# 在分区加载之后,  运行 iptables.sh
chmod +x /opt/etc/iptables.sh && add_service post-mount '/opt/etc/iptables.sh'
# 星期一的 3:25 分升级 IP 白名单.
chmod +x /opt/etc/update_ip_whitelist && add_service services-start 'cru a run-services "25 3 * * 2" "/opt/etc/update_ip_whitelist"'
# 每隔 1 分钟检测下所有的服务是否运行.
add_service services-start 'cru a run-services "*/1 * * * *" "/jffs/scripts/services-start"'

set +e
/jffs/scripts/services-stop
set -e
/jffs/scripts/services-start

echo '貌似部署成功了!'
echo
echo '如果无法翻墙, 按照下列步骤查错:'
echo '1. 断掉已连接的 WiFi, 并重新连接, 看看是否可以翻墙.'
echo '2. 保持 U 盘, 重启路由器, 并等待片刻, 看看是否可以翻墙.'
echo '3. 检查 /opt/etc 下配置文件, 并运行 /jffs/scripts/services-stop; /jffs/scripts/services-start 重启所有服务'
echo
echo  '如果需要重新部署.'
echo '1. 进入管理界面, 选择格式化 jffs, 并重启'
echo '2. 使用 entware-setup.sh 重新初始化包管理系统'
echo '3. 使用本脚本再次部署'
echo
echo  '如果无法连接路由器.'
echo '1. 拔下 U 盘, 重启, 尝试重新连接路由器'
echo '2. 进入管理界面, 选择格式化 jffs, 并重启'
# reboot
