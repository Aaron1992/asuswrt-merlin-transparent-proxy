#!/bin/sh

self="$(curl -sS https://raw.githubusercontent.com/zw963/deployment_bash/v0.3.1/deploy_start.sh)" && eval "$self"

export target=$1

if [ ! -e ./route/opt/etc/shadowsocks.json ];then
    echo '请首先定义 route/opt/etc/shadowsocks.json'
    exit
fi

copy route/opt/etc/dnsmasq.d/foreign_domains.conf /opt/etc/dnsmasq.d/foreign_domains.conf
copy route/opt/etc/iptables2.sh /opt/etc
copy route/opt/etc/iptables_disable.sh /opt/etc
copy route/opt/etc/patch_dnsmasq /opt/etc
copy route/opt/etc/restart_dnsmasq /opt/etc
copy route/opt/etc/update_dns_whitelist /opt/etc
copy route/opt/etc/shadowsocks.json /opt/etc
copy route/opt/etc/localips /opt/etc

deploy_start

# ----------------------------------------------------
#
# 下面的脚本会在远程路由器之上执行, 请根据所需，酌情修改。
#
# ---------------------------------------------------

# 如果第一次运行本脚本, 请务必初始化 entware 包管理系统.
# 在路由器上, 手动执行 entware-setup.sh

if ! opkg update; then
    echo '必须首先运行 entware-setup.sh 初始化包管理系统.'
    exit
fi

if ! modprobe xt_TPROXY; then
    echo '路由器不支持 udp relay, 尝试运行 ss+dnsmasq 部署.'
    exit
fi

# 如果不存在 ipset (例如 AC66U), 首先安装 ipset4
which ipset &>/dev/null || opkg install ipset4

# 添加 AC87U 的 ipset protocal version 6 的 iptables/ipset 支持.
ipset_protocal_version=$(ipset -v |grep -o 'version.*[0-9]' |head -n1 |cut -d' ' -f2)

set -e
opkg install libc libssp libev libmbedtls libpcre libpthread libsodium haveged zlib libopenssl
if opkg find shadowsocks-libev |grep -qs -e '.*'; then
    opkg install shadowsocks-libev
elif opkg find shadowsocks-libev-ss-redir |grep -qs -e '.*'; then
    opkg install shadowsocks-libev-ss-redir
fi
# opkg install bind-dig

if [ "$ipset_protocal_version" == 6 ]; then
    # AC87U 无需安装新版的 iptables/ipset
    echo 'skip install iptables'
else
    # AC66U, 需要额外安装新版的 iptables
    opkg install iptables
fi
set +e

# asuswrt-merlin 有时候会清空 iptables 的 NAT 表, 因此让 iptables2.sh 一分钟定时执行一次.
chmod +x /opt/etc/iptables2.sh && add_service services-start 'cru a iptables-nat "*/1 * * * *" "/opt/etc/iptables2.sh"'

# 删除之前版本创建的脚本, 这个脚本会造成当拔下 U 盘时, 路由器无法正常使用 DHCP.
rm -f /jffs/configs/dnsmasq.conf.add

# 所有服务启动完之后, 运行 /opt/etc/patch_dnsmasq, 为 dnsmasq 追加配置, 并重启 dnsmasq 服务.
# 新的实现方式确保了即使拔掉 U 盘, 路由器会按照原本默认的方式正常上网.
chmod +x /opt/etc/patch_dnsmasq && add_service services-start '/opt/etc/patch_dnsmasq'

# ----------------------------------------------------
#
# 下面执行一些脚本检查与替换。
#
# ---------------------------------------------------

# 确保 shadowsocks.json 中的 local_address 替换为路由器 ip 地址。
replace_regex '"local_address".*' '"local_address":'"\"0.0.0.0\"," /opt/etc/shadowsocks.json

# 取得 shadowsocks.json 中的服务器 ip 地址以及 ss-redir 端口, 并自动替换 iptables2.sh 中对应的值。
remote_server_ip=$(cat /opt/etc/shadowsocks.json |grep 'server"' |cut -d':' -f2|cut -d'"' -f2)
local_redir_port=$(cat /opt/etc/shadowsocks.json |grep 'local_port"' |grep -o '[0-9]*')

replace_string 'REMOTE_SERVER_IP' $remote_server_ip /opt/etc/iptables2.sh
replace_string 'LOCAL_REDIR_PORT' $local_redir_port /opt/etc/iptables2.sh

# 默认 shadowsocks 启动脚本使用 ss-redir 而不是 ss-local, 端口 1080.
replace_string ss-local ss-redir /opt/etc/init.d/S22shadowsocks

# -u 参数开启 udp delay
replace_string 'ARGS="-c /opt/etc/shadowsocks.json"' 'ARGS="-u -c /opt/etc/shadowsocks.json"' /opt/etc/init.d/S22shadowsocks
# 直接使用 8.8.4.4#53 作为 DNS 服务器, 这个 UDP 查询会通过 ss-redir 转发到 ss-server.
replace_string '127.0.0.1#UPSTREAM_PORT' '8.8.8.8#53' /opt/etc/dnsmasq.d/foreign_domains.conf

# 每隔 1 分钟检测下所有的服务是否运行.
add_service services-start 'cru a run-services "*/1 * * * *" "/jffs/scripts/services-start"'

/opt/etc/update_dns_whitelist &&
    (/jffs/scripts/services-stop; /jffs/scripts/services-start) &&
    /opt/etc/iptables2.sh

# 星期一的 3:15 分升级域名白名单.
chmod +x /opt/etc/update_dns_whitelist &&
    add_service services-start 'cru a run-services "15 3 * * 2" "/opt/etc/update_dns_whitelist"'

# 一小时重启一次 dnsmasq, 暂时注释掉.
# chmod +x /opt/etc/restart_dnsmasq && add_service services-start 'cru a restart_dnsmasq "* */1 * * *" "/opt/etc/restart_dnsmasq"'

echo '貌似部署成功了!'
echo
echo '如果无法翻墙, 按照下列步骤查错:'
echo '1. 断掉已连接的 WiFi, 并重新连接, 看看是否可以翻墙.'
echo '2. 保持 U 盘, 重启路由器, 并等待片刻, 看看是否可以翻墙.'
echo '3. 检查 /opt/etc 下配置文件, 并运行 /jffs/scripts/services-stop; /jffs/scripts/services-start 重启所有服务'
echo
echo  '如果需要重新部署.'
echo '1. 进入管理界面, 选择格式化 jffs, 并重启'
echo '2. 使用 entware-setup.sh 重新初始化包管理系统'
echo '3. 使用本脚本再次部署'
echo
echo  '如果无法连接路由器.'
echo '1. 拔下 U 盘, 重启'
echo '2. 进入管理界面, 选择格式化 jffs, 并重启'
echo
echo '如果想暂时关闭透明代理'
echo "在客户主机执行 $: ssh admin@$targetip chmod -x /opt/etc/iptables2.sh, 并重启"
echo "重新开启透明代理: $: ssh admin@$targetip chmod +x /opt/etc/iptables2.sh, 并重启."
reboot
